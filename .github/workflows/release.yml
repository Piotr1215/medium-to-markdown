name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Check version change and validity
        id: check_version
        run: ./check_version_change.sh

      - name: Get current package version
        id: get_version
        run: echo "PACKAGE_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Build project
        run: npm run build

      - name: Generate Changelog
        if: steps.check_version.outcome == 'success'
        run: |
          if [ $(git tag -l | wc -l) -eq 0 ]; then
            echo "No previous tags found. Generating changelog for all commits."
            echo "## v${{ env.PACKAGE_VERSION }} - $(date +'%Y-%m-%d')" > CHANGELOG.md
            git log --pretty=format:"* %s (%h)" >> CHANGELOG.md
          else
            PREVIOUS_TAG=$(git describe --tags --abbrev=0)
            echo "## v${{ env.PACKAGE_VERSION }} - $(date +'%Y-%m-%d')" > CHANGELOG.md
            git log $PREVIOUS_TAG..HEAD --pretty=format:"* %s (%h)" >> CHANGELOG.md
          fi

      - name: Publish to npm
        if: steps.check_version.outcome == 'success'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish

      - name: Create Git Tag
        if: steps.check_version.outcome == 'success'
        run: |
          git tag "v${{ env.PACKAGE_VERSION }}"
          git push origin "v${{ env.PACKAGE_VERSION }}"

      - name: Create GitHub Release
        if: steps.check_version.outcome == 'success'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.PACKAGE_VERSION }}"
          name: "v${{ env.PACKAGE_VERSION }}"
          body_path: CHANGELOG.md
          files: |
            dist/index.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
